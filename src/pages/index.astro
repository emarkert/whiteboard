---
import { db, Post } from "astro:db";
import Layout from "../layouts/Layout.astro";

if (Astro.request.method === "POST") {
  const formData = await Astro.request.formData();
  const title = formData.get("title") as string;
  const body = formData.get("body") as string;
  await db.insert(Post).values({
    title,
    body,
  });
  return Astro.redirect(Astro.url.pathname);
}

const posts = await db.select().from(Post).all();
---

<Layout title="Welcome to Astro.">
  <main>
    <h1>whiteboard</h1>

    <section>
      <form method="POST">
        <label for="title">Title</label>
        <input type="text" id="title" name="title" />
        <label for="body">Body</label>
        <input id="body" type="text" name="body" />
        <button type="submit">Submit</button>
      </form>
    </section>

    <section>
      {
        posts.map((post) => (
          <article class="post">
            <h2 class="title">{post.title}</h2>
            <p class="body">{post.body}</p>
            <p class="date">{post.published.toLocaleDateString("en-US")}</p>
          </article>
        ))
      }
    </section>
  </main>

  <style>
    /*
  1. Use a more-intuitive box-sizing model.
*/
    *,
    *::before,
    *::after {
      box-sizing: border-box;
    }

    /*
  2. Remove default margin
*/
    * {
      margin: 0;
    }

    /*
  3. Allow percentage-based heights in the application
*/
    html,
    body {
      height: 100%;
    }

    /*
  Typographic tweaks!
  4. Add accessible line-height
  5. Improve text rendering
*/
    body {
      line-height: 1.5;
      -webkit-font-smoothing: antialiased;
    }

    /*
  6. Improve media defaults
*/
    img,
    picture,
    video,
    canvas,
    svg {
      display: block;
      max-width: 100%;
    }

    /*
  7. Remove built-in form typography styles
*/
    input,
    button,
    textarea,
    select {
      font: inherit;
    }

    /*
  8. Avoid text overflows
*/
    p,
    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
      overflow-wrap: break-word;
    }

    /*
  9. Create a root stacking context
*/
    #root,
    #__next {
      isolation: isolate;
    }

    /* START OF CUSTOM STYLES */

    main {
      display: flex;
      flex-direction: column;
      align-items: center;
    }

    form {
      display: flex;
      flex-direction: column;
      align-items: center;
    }

    label {
      font-size: 1rem;
      font-weight: 400;
      padding: 0.25rem 0;
      color: hsl(0, 0%, 100%);
    }

    input {
      padding: 0.25rem;
      border: 1px solid #ccc;
      border-radius: 4px;
    }

    button {
      padding: 0.5rem;
      margin: 0.25rem 0;
      border: 1px solid #ccc;
      border-radius: 4px;
      background-color: #f0f0f0;
      cursor: pointer;
    }

    section {
      display: flex;
      flex-direction: column;
      align-items: center;
    }

    article {
      padding: 0.25rem 0.5rem;
      border: 1px solid #ccc;
      border-radius: 4px;
      background-color: hsl(0, 0%, 100%);
    }

    h1 {
      color: hsl(0, 0%, 100%);
    }

    h2 {
      font-size: 1.25rem;
      font-weight: 400;
      margin: 0;
      padding: 0;
    }

    .post {
      font-size: 1rem;
    }
  </style>
</Layout>
